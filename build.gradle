apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'idea'

group = 'com.github.dekobon'
version = '1.0.8'
archivesBaseName = rootProject.name
mainClassName = "com.github.dekobon.HoneybadgerCLI"

run {
    standardInput = System.in
}

repositories {
    mavenCentral()
}

configurations {
    providedCompile
    providedCompile.extendsFrom(compile)
}

javadoc {
    classpath = sourceSets.main.output + sourceSets.main.compileClasspath +
            configurations.providedCompile
}

sourceSets {
    main {
        compileClasspath += configurations.providedCompile
    }
    test {
        compileClasspath += configurations.providedCompile
        runtimeClasspath += configurations.providedCompile
    }
}

dependencies {
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api',
            version: '3.1.0'

    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'com.google.code.gson:gson:2.3'
    compile 'org.apache.httpcomponents:fluent-hc:4.3.5'

    testCompile ('com.google.guava:guava:16.0,') {
        exclude group: 'org.slf4j'
    }

    testCompile 'junit:junit:4.11'
    testCompile 'org.slf4j:slf4j-simple:1.7.7'
    testCompile 'org.mockito:mockito-all:1.9.5'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

            // This messy thing is here to add proper exclusions to
            // generated POMs
            project.configurations[JavaPlugin.RUNTIME_CONFIGURATION_NAME].allDependencies.findAll {
                it instanceof ModuleDependency && !it.excludeRules.isEmpty()
            }.each { ModuleDependency dep ->
                pom.withXml {
                    def xmlDep = asNode().dependencies.dependency.find {
                        it.groupId[0].text() == dep.group && it.artifactId[0].text() == dep.name
                    }
                    def xmlExclusions = xmlDep.exclusions[0]
                    if (!xmlExclusions) xmlExclusions = xmlDep.appendNode('exclusions')

                    dep.excludeRules.each { ExcludeRule rule ->
                        def xmlExclusion = xmlExclusions.appendNode('exclusion')
                        xmlExclusion.appendNode('groupId', rule.group)
                        xmlExclusion.appendNode('artifactId', rule.module)
                    }
                }
            }
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Honeybadger JVM Client'
                packaging 'jar'
                description 'Library that sends exceptions to the online error management service Honeybadger.'
                url 'https://github.com/dekobon/honeybadger-jvm-client-v2'

                scm {
                    connection 'scm:git:git@github.com:dekobon/honeybadger-jvm-client-v2.git'
                    developerConnection 'scm:git:git@github.com:dekobon/honeybadger-jvm-client-v2.git'
                    url 'git@github.com:dekobon/honeybadger-jvm-client-v2.git'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'https://raw.githubusercontent.com/dekobon/honeybadger-jvm-client-v2/master/LICENSE'
                    }
                }

                developers {
                    developer {
                        id 'elijah'
                        name 'Elijah Zupancic'
                        email 'elijah@zupancic.name'
                        organizationUrl 'https://github.com/dekobon'
                    }
                }
            }
        }
    }
}

idea {
    module {
        scopes.PROVIDED.plus += [configurations.providedCompile]
    }
}
